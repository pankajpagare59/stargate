#%RAML 1.0
title: Get information about the customer
version: v1
protocols: [ HTTPS ]
baseUri: https://mocksvc.mulesoft.com/mocks/6a3fc288-4976-4b08-a528-06813aa599c0/api/{version} # baseUri: https://mocksvc.mulesoft.com/mocks/6a3fc288-4976-4b08-a528-06813aa599c0/api/{version} 
mediaType: application/json
securitySchemes:
   oauth_2_0:
    description: This API supports OAuth 2.0 for authenticating all API requests.
    type: OAuth 2.0
    describedBy:
      headers:
        Authorization:
          description: Used to send a valid OAuth 2 access token. Do not use with                         the "access_token" query
          type: string
        queryParameters:
        access_token:
            description: |
              Used to send a valid OAuth 2 access token. Do not use together with                the "Authorization"
              header
            type: string
        responses:
        401:
          description: |
              Bad or expired token. This can happen if the user or the API revoked               or expired an
              access token. To fix, you should re-authenticate the user.
        403:
          description: |
              Bad OAuth request (wrong consumer key, bad nonce,  expired                         timestamp...). Unfortunately, re-authenticating the user won't help                here.

types:
    Error:
      properties: 
        code: integer
        message: string

    Iso3166CountryCode:
      type: string
      enum: 
      - AD
      - AE
      - AF
      - AG
      - AI
      - AL
      - AM
      - AN

    DeliveryAddressType:    
      type: string
      enum: 
      - HOME
      - BUSINESS
      - MAILING

    TelephoneNumberType:
      type: string
      enum:
      - HOME
      - BUSINESS
      - CELL
      - FAX

    DeliveryAddress:
      properties: 
        type:
          type: DeliveryAddressType
        line1: 
          type: string
          maxLength: 64
          required: true
        line2: 
          type: string
          maxLength: 64
        line3: 
          type: string
          maxLength: 64
        city: 
          type: string
          maxLength: 64
          required: true
        state: 
          type: string
          maxLength: 20
          required: true
        zip: 
          type: string
          maxLength: 9
          required: true
        country: Iso3166CountryCode      

    name:
      properties: 
        prefix: 
          type: string
        first: 
          type: string
          required: true
        middle: 
          type: string
        last:
          type: string
          required: true
        suffix: 
          type: string
        company: 
          type: string
        
    Telephone: 
      properties:         
        type: TelephoneNumberType
        country: 
          type: string
          maxLength: 3     
        number: 
          type: string
          maxLength: 10 
          required: true
          pattern: "[0-9|-]+"

    Customer:
      properties:         
        customerId:
          type: string
          required: true
          maxLength: 128
        name: name     
        dateOfBirth:
          type: date-only
          example: 2015-05-23
        taxId: string
        
        governmentId: string
        email:
          type: array          
          items: 
            type: string
            minLength: 2  
            maxLength: 20         
            
        addresses: DeliveryAddress[]
        telephones: Telephone[]  
           
/Customer/{customerId}:
  get: 
    description: Get Customer information by given id     
    responses:
        200:
          body:  
            application/json:
              type: Customer
              example: { 
                  "customerId": "100",
                  "name": { 
                    "prefix": "Mr", 
                    "first": "Shrey", 
                    "middle": "J",
                    "last": "Rozisky",
                    "suffix": "Jr",
                    "company": "Acme"
                  },                                
                  "dateOfBirth": "1990-01-08", 
                  "taxId": "sAAA11",
                  "governmentId": "bhkk678",
                  "email": ["michael11@gmail.com"],
                  "addresses": [{
                                  "type": "HOME",
                                  "line1": "Adhd",
                                  "line2": "mbdcksad",
                                  "line3": "hdl",
                                  "city": "Pune",
                                  "state": "MH"  ,            
                                  "zip": "42333",
                                  "country": "AD"
                                },
                                {
                                    "type": "BUSINESS",
                                    "line1": "Adhd",
                                    "line2": "mbdcksad",
                                    "line3": "hdl",
                                    "city": "elhi",
                                    "state": "MH"  ,                                                                  
                                    "zip": "011323",
                                    "country": "AD"
                                }
                              ],
                  "telephones": [{
                                    "type": "HOME", 
                                    "country": "HF",
                                    "number": "65789340"
                                 },
                                 {
                                    "type": "BUSINESS", 
                                    "country": "FG",
                                    "number": "76548568"
                                 }
                                ]          
                }       
        404:
          body: 
             application/json:
               type: Error
               example: |
                 {"code":404,"message":"Not Found"} 
        500:
          body: 
             application/json:
               type: Error
               example: |
                 {"code":404,"message":"Internal Server Error"}
          
  
  
   
 
